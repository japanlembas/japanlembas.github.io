{"version":3,"file":"static/js/413.45babfa7.chunk.js","mappings":"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","sources":["../../../../node_modules/@noble/hashes/esm/_assert.js","../../../../node_modules/@noble/hashes/esm/utils.js","../../../../node_modules/@noble/hashes/esm/cryptoBrowser.js","../../../../node_modules/@noble/hashes/esm/_sha2.js","../../../../node_modules/@noble/hashes/esm/_u64.js","../../../../node_modules/@noble/hashes/esm/sha512.js","../../../../node_modules/@noble/ed25519/lib/esm/index.js","../../../../node_modules/@noble/hashes/esm/sha256.js","../../../../node_modules/superstruct/src/error.ts","../../../../node_modules/superstruct/src/utils.ts","../../../../node_modules/superstruct/src/struct.ts","../../../../node_modules/superstruct/src/structs/utilities.ts","../../../../node_modules/superstruct/src/structs/types.ts","../../../../node_modules/superstruct/src/structs/coercions.ts","../../../../node_modules/@noble/hashes/esm/sha3.js","../../../../node_modules/@noble/hashes/esm/hmac.js","../../../../node_modules/@noble/secp256k1/lib/esm/index.js","../../../../node_modules/@solana/web3.js/src/utils/ed25519.ts","../../../../node_modules/@solana/web3.js/src/utils/to-buffer.ts","../../../../node_modules/@solana/web3.js/src/utils/borsh-schema.ts","../../../../node_modules/@solana/web3.js/src/publickey.ts","../../../../node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","../../../../node_modules/@solana/web3.js/src/transaction/constants.ts","../../../../node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","../../../../node_modules/@solana/web3.js/src/message/account-keys.ts","../../../../node_modules/@solana/web3.js/src/layout.ts","../../../../node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","../../../../node_modules/@solana/web3.js/src/utils/assert.ts","../../../../node_modules/@solana/web3.js/src/message/compiled-keys.ts","../../../../node_modules/@solana/web3.js/src/message/legacy.ts","../../../../node_modules/@solana/web3.js/src/message/v0.ts","../../../../node_modules/@solana/web3.js/src/transaction/legacy.ts","../../../../node_modules/@solana/web3.js/src/sysvar.ts","../../../../node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","../../../../node_modules/@solana/web3.js/src/utils/sleep.ts","../../../../node_modules/@solana/web3.js/src/instruction.ts","../../../../node_modules/@solana/web3.js/src/fee-calculator.ts","../../../../node_modules/@solana/web3.js/src/nonce-account.ts","../../../../node_modules/@solana/web3.js/src/utils/bigint.ts","../../../../node_modules/@solana/web3.js/src/programs/system.ts","../../../../node_modules/@solana/web3.js/src/loader.ts","../../../../node_modules/@solana/web3.js/src/bpf-loader.ts","../../../../node_modules/@solana/web3.js/node_modules/fast-stable-stringify/index.js","../../../../node_modules/@solana/web3.js/src/epoch-schedule.ts","../../../../node_modules/@solana/web3.js/src/errors.ts","../../../../node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","../../../../node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","../../../../node_modules/@solana/web3.js/src/account-data.ts","../../../../node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","../../../../node_modules/@solana/web3.js/src/connection.ts","../../../../node_modules/@solana/web3.js/src/keypair.ts","../../../../node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","../../../../node_modules/@solana/web3.js/src/programs/compute-budget.ts","../../../../node_modules/@solana/web3.js/src/programs/ed25519.ts","../../../../node_modules/@solana/web3.js/src/utils/secp256k1.ts","../../../../node_modules/@solana/web3.js/src/programs/secp256k1.ts","../../../../node_modules/@solana/web3.js/src/programs/stake.ts","../../../../node_modules/@solana/web3.js/src/programs/vote.ts","../../../../node_modules/@solana/web3.js/src/validator-info.ts","../../../../node_modules/@solana/web3.js/src/vote-account.ts","../node_modules/@web3auth/solana-provider/src/rpc/JrpcClient.ts","../node_modules/@web3auth/solana-provider/src/rpc/solanaRpcMiddlewares.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/baseInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/base/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/injectedProviderProxy.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/slope/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/solflare/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/providerHandlers.ts","../node_modules/@web3auth/solana-provider/src/providers/injectedProviders/torus/torusInjectedProvider.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../node_modules/@web3auth/solana-provider/src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../node_modules/@web3auth/solana-provider/src/solanaWallet.ts","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../../src/Layout.ts","../../../../node_modules/@solana/web3.js/node_modules/buffer/index.js","../../../../node_modules/base-x/src/index.js","../../../../node_modules/base64-js/index.js","../../../../node_modules/bigint-buffer/dist/browser.js","../../../../node_modules/bn.js/lib/bn.js","../../../../node_modules/borsh/lib/index.js","../../../../node_modules/bs58/index.js","../../../../node_modules/buffer/index.js","../../../../node_modules/eventemitter3/index.js","../../../../node_modules/ieee754/index.js","../../../../node_modules/jayson/lib/client/browser/index.js","../../../../node_modules/jayson/lib/generateRequest.js","../../../../node_modules/rpc-websockets/dist/index.browser.js","../../../../node_modules/rpc-websockets/dist/lib/client.js","../../../../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../../../../node_modules/safe-buffer/index.js","../../../../node_modules/uuid/dist/esm-browser/rng.js","../../../../node_modules/uuid/dist/esm-browser/regex.js","../../../../node_modules/uuid/dist/esm-browser/validate.js","../../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../../node_modules/uuid/dist/esm-browser/v4.js","../../../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../../../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../../../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../../../node_modules/@babel/runtime/helpers/createClass.js","../../../../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../../../node_modules/@babel/runtime/helpers/inherits.js","../../../../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../../../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../../../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../../../../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../../../node_modules/@babel/runtime/helpers/toPrimitive.js","../../../../node_modules/@babel/runtime/helpers/toPropertyKey.js","../../../../node_modules/@babel/runtime/helpers/typeof.js","../../../../node_modules/@babel/runtime/regenerator/index.js","../../../../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs"],"sourcesContent":["export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        assert.exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","/*! noble-ed25519 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst CU_O = BigInt('7237005577332262213973186563042994240857116359379907606001950938285454250989');\nconst CURVE = Object.freeze({\n    a: BigInt(-1),\n    d: BigInt('37095705934669439343138083508754565189542113879843219016388785533085940283555'),\n    P: BigInt('57896044618658097711785492504343953926634992332820282019728792003956564819949'),\n    l: CU_O,\n    n: CU_O,\n    h: BigInt(8),\n    Gx: BigInt('15112221349535400772501151409588531511454012693041857206046113283949847762202'),\n    Gy: BigInt('46316835694926478169428394003475163141307993866256225615783033603165251855960'),\n});\nexport { CURVE };\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nconst SQRT_M1 = BigInt('19681161376707505956807079304988542015446066515923890162744021073123829784752');\nconst SQRT_D = BigInt('6853475219497561581579357271197624642482790079785650197046958215289687604742');\nconst SQRT_AD_MINUS_ONE = BigInt('25063068953384623474111414158702152701244531502492656460079210482610430750235');\nconst INVSQRT_A_MINUS_D = BigInt('54469307008909316920995813868745141605393597292927456921205312896311721017578');\nconst ONE_MINUS_D_SQ = BigInt('1159843021668779879193775521855586647937357759715417654439879720876111806838');\nconst D_MINUS_ONE_SQ = BigInt('40440834346308536858101042469323190826248399146238708352240133220865137265952');\nclass ExtendedPoint {\n    constructor(x, y, z, t) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.t = t;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('ExtendedPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return ExtendedPoint.ZERO;\n        return new ExtendedPoint(p.x, p.y, _1n, mod(p.x * p.y));\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return this.toAffineBatch(points).map(this.fromAffine);\n    }\n    equals(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const X1Z2 = mod(X1 * Z2);\n        const X2Z1 = mod(X2 * Z1);\n        const Y1Z2 = mod(Y1 * Z2);\n        const Y2Z1 = mod(Y2 * Z1);\n        return X1Z2 === X2Z1 && Y1Z2 === Y2Z1;\n    }\n    negate() {\n        return new ExtendedPoint(mod(-this.x), this.y, this.z, mod(-this.t));\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { a } = CURVE;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(_2n * mod(Z1 * Z1));\n        const D = mod(a * A);\n        const x1y1 = X1 + Y1;\n        const E = mod(mod(x1y1 * x1y1) - A - B);\n        const G = D + B;\n        const F = G - C;\n        const H = D - B;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    add(other) {\n        assertExtPoint(other);\n        const { x: X1, y: Y1, z: Z1, t: T1 } = this;\n        const { x: X2, y: Y2, z: Z2, t: T2 } = other;\n        const A = mod((Y1 - X1) * (Y2 + X2));\n        const B = mod((Y1 + X1) * (Y2 - X2));\n        const F = mod(B - A);\n        if (F === _0n)\n            return this.double();\n        const C = mod(Z1 * _2n * T2);\n        const D = mod(T1 * _2n * Z2);\n        const E = D + C;\n        const G = B + A;\n        const H = D - C;\n        const X3 = mod(E * F);\n        const Y3 = mod(G * H);\n        const T3 = mod(E * H);\n        const Z3 = mod(F * G);\n        return new ExtendedPoint(X3, Y3, Z3, T3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    precomputeWindow(W) {\n        const windows = 1 + 256 / W;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(ExtendedPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = ExtendedPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = ExtendedPoint.ZERO;\n        let f = ExtendedPoint.ZERO;\n        const windows = 1 + 256 / W;\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return ExtendedPoint.normalizeZ([p, f])[0];\n    }\n    multiply(scalar, affinePoint) {\n        return this.wNAF(normalizeScalar(scalar, CURVE.l), affinePoint);\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar, CURVE.l, false);\n        const G = ExtendedPoint.BASE;\n        const P0 = ExtendedPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (this.equals(P0) || n === _1n)\n            return this;\n        if (this.equals(G))\n            return this.wNAF(n);\n        let p = P0;\n        let d = this;\n        while (n > _0n) {\n            if (n & _1n)\n                p = p.add(d);\n            d = d.double();\n            n >>= _1n;\n        }\n        return p;\n    }\n    isSmallOrder() {\n        return this.multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n    }\n    isTorsionFree() {\n        return this.multiplyUnsafe(CURVE.l).equals(ExtendedPoint.ZERO);\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const ax = mod(x * invZ);\n        const ay = mod(y * invZ);\n        const zz = mod(z * invZ);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n    fromRistrettoBytes() {\n        legacyRist();\n    }\n    toRistrettoBytes() {\n        legacyRist();\n    }\n    fromRistrettoHash() {\n        legacyRist();\n    }\n}\nExtendedPoint.BASE = new ExtendedPoint(CURVE.Gx, CURVE.Gy, _1n, mod(CURVE.Gx * CURVE.Gy));\nExtendedPoint.ZERO = new ExtendedPoint(_0n, _1n, _1n, _0n);\nfunction assertExtPoint(other) {\n    if (!(other instanceof ExtendedPoint))\n        throw new TypeError('ExtendedPoint expected');\n}\nfunction assertRstPoint(other) {\n    if (!(other instanceof RistrettoPoint))\n        throw new TypeError('RistrettoPoint expected');\n}\nfunction legacyRist() {\n    throw new Error('Legacy method: switch to RistrettoPoint');\n}\nclass RistrettoPoint {\n    constructor(ep) {\n        this.ep = ep;\n    }\n    static calcElligatorRistrettoMap(r0) {\n        const { d } = CURVE;\n        const r = mod(SQRT_M1 * r0 * r0);\n        const Ns = mod((r + _1n) * ONE_MINUS_D_SQ);\n        let c = BigInt(-1);\n        const D = mod((c - d * r) * mod(r + d));\n        let { isValid: Ns_D_is_sq, value: s } = uvRatio(Ns, D);\n        let s_ = mod(s * r0);\n        if (!edIsNegative(s_))\n            s_ = mod(-s_);\n        if (!Ns_D_is_sq)\n            s = s_;\n        if (!Ns_D_is_sq)\n            c = r;\n        const Nt = mod(c * (r - _1n) * D_MINUS_ONE_SQ - D);\n        const s2 = s * s;\n        const W0 = mod((s + s) * D);\n        const W1 = mod(Nt * SQRT_AD_MINUS_ONE);\n        const W2 = mod(_1n - s2);\n        const W3 = mod(_1n + s2);\n        return new ExtendedPoint(mod(W0 * W3), mod(W2 * W1), mod(W1 * W3), mod(W0 * W2));\n    }\n    static hashToCurve(hex) {\n        hex = ensureBytes(hex, 64);\n        const r1 = bytes255ToNumberLE(hex.slice(0, 32));\n        const R1 = this.calcElligatorRistrettoMap(r1);\n        const r2 = bytes255ToNumberLE(hex.slice(32, 64));\n        const R2 = this.calcElligatorRistrettoMap(r2);\n        return new RistrettoPoint(R1.add(R2));\n    }\n    static fromHex(hex) {\n        hex = ensureBytes(hex, 32);\n        const { a, d } = CURVE;\n        const emsg = 'RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint';\n        const s = bytes255ToNumberLE(hex);\n        if (!equalBytes(numberTo32BytesLE(s), hex) || edIsNegative(s))\n            throw new Error(emsg);\n        const s2 = mod(s * s);\n        const u1 = mod(_1n + a * s2);\n        const u2 = mod(_1n - a * s2);\n        const u1_2 = mod(u1 * u1);\n        const u2_2 = mod(u2 * u2);\n        const v = mod(a * d * u1_2 - u2_2);\n        const { isValid, value: I } = invertSqrt(mod(v * u2_2));\n        const Dx = mod(I * u2);\n        const Dy = mod(I * Dx * v);\n        let x = mod((s + s) * Dx);\n        if (edIsNegative(x))\n            x = mod(-x);\n        const y = mod(u1 * Dy);\n        const t = mod(x * y);\n        if (!isValid || edIsNegative(t) || y === _0n)\n            throw new Error(emsg);\n        return new RistrettoPoint(new ExtendedPoint(x, y, _1n, t));\n    }\n    toRawBytes() {\n        let { x, y, z, t } = this.ep;\n        const u1 = mod(mod(z + y) * mod(z - y));\n        const u2 = mod(x * y);\n        const u2sq = mod(u2 * u2);\n        const { value: invsqrt } = invertSqrt(mod(u1 * u2sq));\n        const D1 = mod(invsqrt * u1);\n        const D2 = mod(invsqrt * u2);\n        const zInv = mod(D1 * D2 * t);\n        let D;\n        if (edIsNegative(t * zInv)) {\n            let _x = mod(y * SQRT_M1);\n            let _y = mod(x * SQRT_M1);\n            x = _x;\n            y = _y;\n            D = mod(D1 * INVSQRT_A_MINUS_D);\n        }\n        else {\n            D = D2;\n        }\n        if (edIsNegative(x * zInv))\n            y = mod(-y);\n        let s = mod((z - y) * D);\n        if (edIsNegative(s))\n            s = mod(-s);\n        return numberTo32BytesLE(s);\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toString() {\n        return this.toHex();\n    }\n    equals(other) {\n        assertRstPoint(other);\n        const a = this.ep;\n        const b = other.ep;\n        const one = mod(a.x * b.y) === mod(a.y * b.x);\n        const two = mod(a.y * b.y) === mod(a.x * b.x);\n        return one || two;\n    }\n    add(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.add(other.ep));\n    }\n    subtract(other) {\n        assertRstPoint(other);\n        return new RistrettoPoint(this.ep.subtract(other.ep));\n    }\n    multiply(scalar) {\n        return new RistrettoPoint(this.ep.multiply(scalar));\n    }\n    multiplyUnsafe(scalar) {\n        return new RistrettoPoint(this.ep.multiplyUnsafe(scalar));\n    }\n}\nRistrettoPoint.BASE = new RistrettoPoint(ExtendedPoint.BASE);\nRistrettoPoint.ZERO = new RistrettoPoint(ExtendedPoint.ZERO);\nconst pointPrecomputes = new WeakMap();\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromHex(hex, strict = true) {\n        const { d, P } = CURVE;\n        hex = ensureBytes(hex, 32);\n        const normed = hex.slice();\n        normed[31] = hex[31] & ~0x80;\n        const y = bytesToNumberLE(normed);\n        if (strict && y >= P)\n            throw new Error('Expected 0 < hex < P');\n        if (!strict && y >= POW_2_256)\n            throw new Error('Expected 0 < hex < 2**256');\n        const y2 = mod(y * y);\n        const u = mod(y2 - _1n);\n        const v = mod(d * y2 + _1n);\n        let { isValid, value: x } = uvRatio(u, v);\n        if (!isValid)\n            throw new Error('Point.fromHex: invalid y coordinate');\n        const isXOdd = (x & _1n) === _1n;\n        const isLastByteOdd = (hex[31] & 0x80) !== 0;\n        if (isLastByteOdd !== isXOdd) {\n            x = mod(-x);\n        }\n        return new Point(x, y);\n    }\n    static async fromPrivateKey(privateKey) {\n        return (await getExtendedPublicKey(privateKey)).point;\n    }\n    toRawBytes() {\n        const bytes = numberTo32BytesLE(this.y);\n        bytes[31] |= this.x & _1n ? 0x80 : 0;\n        return bytes;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n    toX25519() {\n        const { y } = this;\n        const u = mod((_1n + y) * invert(_1n - y));\n        return numberTo32BytesLE(u);\n    }\n    isTorsionFree() {\n        return ExtendedPoint.fromAffine(this).isTorsionFree();\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(mod(-this.x), this.y);\n    }\n    add(other) {\n        return ExtendedPoint.fromAffine(this).add(ExtendedPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return ExtendedPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _1n);\nclass Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex, 64);\n        const r = Point.fromHex(bytes.slice(0, 32), false);\n        const s = bytesToNumberLE(bytes.slice(32, 64));\n        return new Signature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!(r instanceof Point))\n            throw new Error('Expected Point instance');\n        normalizeScalar(s, CURVE.l, false);\n        return this;\n    }\n    toRawBytes() {\n        const u8 = new Uint8Array(64);\n        u8.set(this.r.toRawBytes());\n        u8.set(numberTo32BytesLE(this.s), 32);\n        return u8;\n    }\n    toHex() {\n        return bytesToHex(this.toRawBytes());\n    }\n}\nexport { ExtendedPoint, RistrettoPoint, Point, Signature };\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array list');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction numberTo32BytesBE(num) {\n    const length = 32;\n    const hex = num.toString(16).padStart(length * 2, '0');\n    return hexToBytes(hex);\n}\nfunction numberTo32BytesLE(num) {\n    return numberTo32BytesBE(num).reverse();\n}\nfunction edIsNegative(num) {\n    return (mod(num) & _1n) === _1n;\n}\nfunction bytesToNumberLE(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    return BigInt('0x' + bytesToHex(Uint8Array.from(uint8a).reverse()));\n}\nconst MAX_255B = BigInt('0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nfunction bytes255ToNumberLE(bytes) {\n    return mod(bytesToNumberLE(bytes) & MAX_255B);\n}\nfunction mod(a, b = CURVE.P) {\n    const res = a % b;\n    return res >= _0n ? res : b + res;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const tmp = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        tmp[i] = mod(acc * tmp[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return tmp;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction pow_2_252_3(x) {\n    const { P } = CURVE;\n    const _5n = BigInt(5);\n    const _10n = BigInt(10);\n    const _20n = BigInt(20);\n    const _40n = BigInt(40);\n    const _80n = BigInt(80);\n    const x2 = (x * x) % P;\n    const b2 = (x2 * x) % P;\n    const b4 = (pow2(b2, _2n) * b2) % P;\n    const b5 = (pow2(b4, _1n) * x) % P;\n    const b10 = (pow2(b5, _5n) * b5) % P;\n    const b20 = (pow2(b10, _10n) * b10) % P;\n    const b40 = (pow2(b20, _20n) * b20) % P;\n    const b80 = (pow2(b40, _40n) * b40) % P;\n    const b160 = (pow2(b80, _80n) * b80) % P;\n    const b240 = (pow2(b160, _80n) * b80) % P;\n    const b250 = (pow2(b240, _10n) * b10) % P;\n    const pow_p_5_8 = (pow2(b250, _2n) * x) % P;\n    return { pow_p_5_8, b2 };\n}\nfunction uvRatio(u, v) {\n    const v3 = mod(v * v * v);\n    const v7 = mod(v3 * v3 * v);\n    const pow = pow_2_252_3(u * v7).pow_p_5_8;\n    let x = mod(u * v3 * pow);\n    const vx2 = mod(v * x * x);\n    const root1 = x;\n    const root2 = mod(x * SQRT_M1);\n    const useRoot1 = vx2 === u;\n    const useRoot2 = vx2 === mod(-u);\n    const noRoot = vx2 === mod(-u * SQRT_M1);\n    if (useRoot1)\n        x = root1;\n    if (useRoot2 || noRoot)\n        x = root2;\n    if (edIsNegative(x))\n        x = mod(-x);\n    return { isValid: useRoot1 || useRoot2, value: x };\n}\nfunction invertSqrt(number) {\n    return uvRatio(_1n, number);\n}\nfunction modlLE(hash) {\n    return mod(bytesToNumberLE(hash), CURVE.l);\n}\nfunction equalBytes(b1, b2) {\n    if (b1.length !== b2.length) {\n        return false;\n    }\n    for (let i = 0; i < b1.length; i++) {\n        if (b1[i] !== b2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction ensureBytes(hex, expectedLength) {\n    const bytes = hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n    if (typeof expectedLength === 'number' && bytes.length !== expectedLength)\n        throw new Error(`Expected ${expectedLength} bytes`);\n    return bytes;\n}\nfunction normalizeScalar(num, max, strict = true) {\n    if (!max)\n        throw new TypeError('Specify max value');\n    if (typeof num === 'number' && Number.isSafeInteger(num))\n        num = BigInt(num);\n    if (typeof num === 'bigint' && num < max) {\n        if (strict) {\n            if (_0n < num)\n                return num;\n        }\n        else {\n            if (_0n <= num)\n                return num;\n        }\n    }\n    throw new TypeError('Expected valid scalar: 0 < scalar < max');\n}\nfunction adjustBytes25519(bytes) {\n    bytes[0] &= 248;\n    bytes[31] &= 127;\n    bytes[31] |= 64;\n    return bytes;\n}\nfunction decodeScalar25519(n) {\n    return bytesToNumberLE(adjustBytes25519(ensureBytes(n, 32)));\n}\nfunction checkPrivateKey(key) {\n    key =\n        typeof key === 'bigint' || typeof key === 'number'\n            ? numberTo32BytesBE(normalizeScalar(key, POW_2_256))\n            : ensureBytes(key);\n    if (key.length !== 32)\n        throw new Error(`Expected 32 bytes`);\n    return key;\n}\nfunction getKeyFromHash(hashed) {\n    const head = adjustBytes25519(hashed.slice(0, 32));\n    const prefix = hashed.slice(32, 64);\n    const scalar = modlLE(head);\n    const point = Point.BASE.multiply(scalar);\n    const pointBytes = point.toRawBytes();\n    return { head, prefix, scalar, point, pointBytes };\n}\nlet _sha512Sync;\nfunction sha512s(...m) {\n    if (typeof _sha512Sync !== 'function')\n        throw new Error('utils.sha512Sync must be set to use sync methods');\n    return _sha512Sync(...m);\n}\nasync function getExtendedPublicKey(key) {\n    return getKeyFromHash(await utils.sha512(checkPrivateKey(key)));\n}\nfunction getExtendedPublicKeySync(key) {\n    return getKeyFromHash(sha512s(checkPrivateKey(key)));\n}\nexport async function getPublicKey(privateKey) {\n    return (await getExtendedPublicKey(privateKey)).pointBytes;\n}\nfunction getPublicKeySync(privateKey) {\n    return getExtendedPublicKeySync(privateKey).pointBytes;\n}\nexport async function sign(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = await getExtendedPublicKey(privateKey);\n    const r = modlLE(await utils.sha512(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(await utils.sha512(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction signSync(message, privateKey) {\n    message = ensureBytes(message);\n    const { prefix, scalar, pointBytes } = getExtendedPublicKeySync(privateKey);\n    const r = modlLE(sha512s(prefix, message));\n    const R = Point.BASE.multiply(r);\n    const k = modlLE(sha512s(R.toRawBytes(), pointBytes, message));\n    const s = mod(r + k * scalar, CURVE.l);\n    return new Signature(R, s).toRawBytes();\n}\nfunction prepareVerification(sig, message, publicKey) {\n    message = ensureBytes(message);\n    if (!(publicKey instanceof Point))\n        publicKey = Point.fromHex(publicKey, false);\n    const { r, s } = sig instanceof Signature ? sig.assertValidity() : Signature.fromHex(sig);\n    const SB = ExtendedPoint.BASE.multiplyUnsafe(s);\n    return { r, s, SB, pub: publicKey, msg: message };\n}\nfunction finishVerification(publicKey, r, SB, hashed) {\n    const k = modlLE(hashed);\n    const kA = ExtendedPoint.fromAffine(publicKey).multiplyUnsafe(k);\n    const RkA = ExtendedPoint.fromAffine(r).add(kA);\n    return RkA.subtract(SB).multiplyUnsafe(CURVE.h).equals(ExtendedPoint.ZERO);\n}\nexport async function verify(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = await utils.sha512(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nfunction verifySync(sig, message, publicKey) {\n    const { r, SB, msg, pub } = prepareVerification(sig, message, publicKey);\n    const hashed = sha512s(r.toRawBytes(), pub.toRawBytes(), msg);\n    return finishVerification(pub, r, SB, hashed);\n}\nexport const sync = {\n    getExtendedPublicKey: getExtendedPublicKeySync,\n    getPublicKey: getPublicKeySync,\n    sign: signSync,\n    verify: verifySync,\n};\nexport async function getSharedSecret(privateKey, publicKey) {\n    const { head } = await getExtendedPublicKey(privateKey);\n    const u = Point.fromHex(publicKey).toX25519();\n    return curve25519.scalarMult(head, u);\n}\nPoint.BASE._setWindowSize(8);\nfunction cswap(swap, x_2, x_3) {\n    const dummy = mod(swap * (x_2 - x_3));\n    x_2 = mod(x_2 - dummy);\n    x_3 = mod(x_3 + dummy);\n    return [x_2, x_3];\n}\nfunction montgomeryLadder(pointU, scalar) {\n    const { P } = CURVE;\n    const u = normalizeScalar(pointU, P);\n    const k = normalizeScalar(scalar, P);\n    const a24 = BigInt(121665);\n    const x_1 = u;\n    let x_2 = _1n;\n    let z_2 = _0n;\n    let x_3 = u;\n    let z_3 = _1n;\n    let swap = _0n;\n    let sw;\n    for (let t = BigInt(255 - 1); t >= _0n; t--) {\n        const k_t = (k >> t) & _1n;\n        swap ^= k_t;\n        sw = cswap(swap, x_2, x_3);\n        x_2 = sw[0];\n        x_3 = sw[1];\n        sw = cswap(swap, z_2, z_3);\n        z_2 = sw[0];\n        z_3 = sw[1];\n        swap = k_t;\n        const A = x_2 + z_2;\n        const AA = mod(A * A);\n        const B = x_2 - z_2;\n        const BB = mod(B * B);\n        const E = AA - BB;\n        const C = x_3 + z_3;\n        const D = x_3 - z_3;\n        const DA = mod(D * A);\n        const CB = mod(C * B);\n        const dacb = DA + CB;\n        const da_cb = DA - CB;\n        x_3 = mod(dacb * dacb);\n        z_3 = mod(x_1 * mod(da_cb * da_cb));\n        x_2 = mod(AA * BB);\n        z_2 = mod(E * (AA + mod(a24 * E)));\n    }\n    sw = cswap(swap, x_2, x_3);\n    x_2 = sw[0];\n    x_3 = sw[1];\n    sw = cswap(swap, z_2, z_3);\n    z_2 = sw[0];\n    z_3 = sw[1];\n    const { pow_p_5_8, b2 } = pow_2_252_3(z_2);\n    const xp2 = mod(pow2(pow_p_5_8, BigInt(3)) * b2);\n    return mod(x_2 * xp2);\n}\nfunction encodeUCoordinate(u) {\n    return numberTo32BytesLE(mod(u, CURVE.P));\n}\nfunction decodeUCoordinate(uEnc) {\n    const u = ensureBytes(uEnc, 32);\n    u[31] &= 127;\n    return bytesToNumberLE(u);\n}\nexport const curve25519 = {\n    BASE_POINT_U: '0900000000000000000000000000000000000000000000000000000000000000',\n    scalarMult(privateKey, publicKey) {\n        const u = decodeUCoordinate(publicKey);\n        const p = decodeScalar25519(privateKey);\n        const pu = montgomeryLadder(u, p);\n        if (pu === _0n)\n            throw new Error('Invalid private or public key received');\n        return encodeUCoordinate(pu);\n    },\n    scalarMultBase(privateKey) {\n        return curve25519.scalarMult(privateKey, curve25519.BASE_POINT_U);\n    },\n};\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    getExtendedPublicKey,\n    mod,\n    invert,\n    TORSION_SUBGROUP: [\n        '0100000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a',\n        '0000000000000000000000000000000000000000000000000000000000000080',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05',\n        'ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f',\n        '26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85',\n        '0000000000000000000000000000000000000000000000000000000000000000',\n        'c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa',\n    ],\n    hashToPrivateScalar: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        return mod(bytesToNumberLE(hash), CURVE.l - _1n) + _1n;\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return new Uint8Array(randomBytes(bytesLength).buffer);\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.randomBytes(32);\n    },\n    sha512: async (...messages) => {\n        const message = concatBytes(...messages);\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-512', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            return Uint8Array.from(crypto.node.createHash('sha512').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha512 function\");\n        }\n    },\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point.equals(Point.BASE) ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_2n);\n        return cached;\n    },\n    sha512Sync: undefined,\n};\nObject.defineProperties(utils, {\n    sha512Sync: {\n        configurable: false,\n        get() {\n            return _sha512Sync;\n        },\n        set(val) {\n            if (!_sha512Sync)\n                _sha512Sync = val;\n        },\n    },\n});\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        assert.number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        assert.exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        assert.exists(this, false);\n        assert.bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        assert.number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        assert.output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n","import assert from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assert.hash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assert.exists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.bytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","import {sha512} from '@noble/hashes/sha512';\nimport * as ed25519 from '@noble/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\ned25519.utils.sha512Sync = (...m) => sha512(ed25519.utils.concatBytes(...m));\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.sync.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.Point.fromHex(publicKey, true /* strict */);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sync.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sync.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.sync.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift()!;\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = byteArray.shift()!;\n    const numReadonlyUnsignedAccounts = byteArray.shift()!;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBLIC_KEY_LENGTH);\n    byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift()!;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = byteArray.shift() as number;\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: byteArray.shift() as number,\n      numReadonlySignedAccounts: byteArray.shift() as number,\n      numReadonlyUnsignedAccounts: byteArray.shift() as number,\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = byteArray.splice(0, accountKeyIndexesLength);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(byteArray.splice(0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(byteArray.splice(0, PUBLIC_KEY_LENGTH));\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = byteArray.splice(0, writableIndexesLength);\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = byteArray.splice(0, readonlyIndexesLength);\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   */\n  verifySignatures(requireAllSignatures?: boolean): boolean {\n    return this._verifySignatures(\n      this.serializeMessage(),\n      requireAllSignatures === undefined ? true : requireAllSignatures,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(\n    signData: Uint8Array,\n    requireAllSignatures: boolean,\n  ): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (!verify(signature, signData, publicKey.toBytes())) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  typeof SolanaJSONRPCErrorCode[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to solana-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of account addresses to return post simulation state for */\n  accounts?: {\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(\n    commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block height information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, options);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {hmac} from '@noble/hashes/hmac';\nimport {sha256} from '@noble/hashes/sha256';\nimport * as secp256k1 from '@noble/secp256k1';\n\n// Supply a synchronous hashing algorithm to make this\n// library interoperable with the synchronous APIs in web3.js.\nsecp256k1.utils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.signSync>[0],\n  privKey: Parameters<typeof secp256k1.signSync>[1],\n) => secp256k1.signSync(msgHash, privKey, {der: false, recovered: true});\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'AuthorizeWithSeed' | 'InitializeAccount' | 'Withdraw';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insuffcient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBLIC_KEY_LENGTH));\n      byteArray = byteArray.slice(PUBLIC_KEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import { createFetchMiddleware } from \"@toruslabs/base-controllers\";\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig } from \"@web3auth/base\";\n\nexport function createChainIdMiddleware(chainId: string): JRPCMiddleware<unknown, unknown> {\n  return (req: JRPCRequest<unknown>, res: JRPCResponse<string>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createProviderConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  return (\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<Omit<CustomChainConfig, \"chainNamespace\">>,\n    next: JRPCEngineNextCallback,\n    end: JRPCEngineEndCallback\n  ) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n    return next();\n  };\n}\n\nexport function createConfigMiddleware(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): JRPCMiddleware<unknown, unknown> {\n  const { chainId } = providerConfig;\n\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\n\nexport function createJsonRpcClient(providerConfig: Omit<CustomChainConfig, \"chainNamespace\">): {\n  networkMiddleware: JRPCMiddleware<unknown, unknown>;\n  fetchMiddleware: JRPCMiddleware<unknown, unknown>;\n} {\n  const { rpcTarget } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({ rpcTarget });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return { networkMiddleware, fetchMiddleware };\n}\n","import type { Transaction } from \"@solana/web3.js\";\nimport { createAsyncMiddleware, JRPCMiddleware, JRPCRequest, mergeMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nexport interface IProviderHandlers {\n  requestAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getAccounts: (req: JRPCRequest<unknown>) => Promise<string[]>;\n  getPrivateKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<Transaction>;\n  signAllTransactions: (req: JRPCRequest<{ message: Transaction[] }>) => Promise<Transaction[]>;\n  signAndSendTransaction: (req: JRPCRequest<{ message: Transaction }>) => Promise<{ signature: string }>;\n  getSecretKey: (req: JRPCRequest<unknown>) => Promise<string>;\n  signMessage: (req: JRPCRequest<{ message: Uint8Array; display?: string }>) => Promise<Uint8Array>;\n}\n\nexport function createGetAccountsMiddleware({ getAccounts }: { getAccounts: IProviderHandlers[\"getAccounts\"] }): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"getAccounts\") return next();\n\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\");\n    // This calls from the prefs controller\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createRequestAccountsMiddleware({\n  requestAccounts,\n}: {\n  requestAccounts: IProviderHandlers[\"requestAccounts\"];\n}): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const { method } = request;\n    if (method !== \"requestAccounts\") return next();\n\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\");\n    // This calls the UI login function\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\n\nexport function createGenericJRPCMiddleware<T, U>(\n  targetMethod: string,\n  handler: (req: JRPCRequest<T>) => Promise<U>\n): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware<T, unknown>(async (request, response, next) => {\n    const { method } = request;\n    if (method !== targetMethod) return next();\n\n    if (!handler) throw new Error(`WalletMiddleware - ${targetMethod} not provided`);\n\n    const result = await handler(request);\n\n    response.result = result;\n    return undefined;\n  });\n}\n\nexport function createSolanaMiddleware(providerHandlers: IProviderHandlers): JRPCMiddleware<unknown, unknown> {\n  const { getAccounts, requestAccounts, signTransaction, signAndSendTransaction, signAllTransactions, signMessage, getPrivateKey, getSecretKey } =\n    providerHandlers;\n\n  return mergeMiddleware([\n    createRequestAccountsMiddleware({ requestAccounts }),\n    createGetAccountsMiddleware({ getAccounts }),\n    createGenericJRPCMiddleware<{ message: Transaction }, Transaction>(\"signTransaction\", signTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction }, { signature: string }>(\"signAndSendTransaction\", signAndSendTransaction),\n    createGenericJRPCMiddleware<{ message: Transaction[] }, Transaction[]>(\"signAllTransactions\", signAllTransactions),\n    createGenericJRPCMiddleware<{ message: Uint8Array }, Uint8Array>(\"signMessage\", signMessage),\n    createGenericJRPCMiddleware<void, string>(\"solanaPrivateKey\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"private_key\", getPrivateKey),\n    createGenericJRPCMiddleware<void, string>(\"solanaSecretKey\", getSecretKey),\n  ]);\n}\nexport interface AddSolanaChainParameter {\n  chainId: string; // A 0x-prefixed hexadecimal string\n  chainName: string;\n  nativeCurrency: {\n    name: string;\n    symbol: string; // 2-6 characters long\n    decimals: 18;\n  };\n  rpcUrls: string[];\n  blockExplorerUrls?: string[];\n}\n\nexport interface IChainSwitchHandlers {\n  addNewChainConfig: (req: JRPCRequest<AddSolanaChainParameter>) => Promise<void>;\n  switchSolanaChain: (req: JRPCRequest<{ chainId: string }>) => Promise<void>;\n}\nexport function createChainSwitchMiddleware({ addNewChainConfig, switchSolanaChain }: IChainSwitchHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([\n    createGenericJRPCMiddleware<AddSolanaChainParameter, void>(\"addSolanaChain\", addNewChainConfig),\n    createGenericJRPCMiddleware<{ chainId: string }, void>(\"switchSolanaChain\", switchSolanaChain),\n  ]);\n}\n\nexport interface IAccountHandlers {\n  updatePrivatekey: (req: JRPCRequest<{ privateKey: string }>) => Promise<void>;\n}\nexport function createAccountMiddleware({ updatePrivatekey }: IAccountHandlers): JRPCMiddleware<unknown, unknown> {\n  return mergeMiddleware([createGenericJRPCMiddleware<{ privateKey: string }, void>(\"updateAccount\", updatePrivatekey)]);\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\n\nimport { createConfigMiddleware } from \"../../../rpc/JrpcClient\";\nimport { createSolanaMiddleware, IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport abstract class BaseInjectedProvider<P> extends BaseProvider<BaseProviderConfig, BaseProviderState, P> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: P): Promise<void> {\n    const engine = new JRPCEngine();\n\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig as CustomChainConfig);\n    engine.push(configMiddleware);\n\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    const { chainConfig } = this.config;\n    this.update({\n      chainId: chainConfig.chainId,\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  protected getInjectedProviderProxy(_: P): JRPCMiddleware<unknown, unknown> {\n    return undefined;\n  }\n\n  protected abstract getProviderHandlers(injectedProvider: P): IProviderHandlers;\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getBaseProviderHandlers = (injectedProvider: IBaseWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => (injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : []),\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array; display?: \"utf8\" | \"hex\" }>): Promise<Uint8Array> => {\n      const sigData = await injectedProvider.signMessage(req.params.message, req.params.display);\n      return sigData.signature;\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return { signature: txRes.signature };\n    },\n  };\n  return providerHandlers;\n};\n","import { createAsyncMiddleware, JRPCEngineNextCallback, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"@toruslabs/openlogin-jrpc\";\n\nimport { InjectedProvider } from \"./interface\";\n\nexport function createInjectedProviderProxyMiddleware(provider: InjectedProvider): JRPCMiddleware<unknown, unknown> {\n  return createAsyncMiddleware(async (req: JRPCRequest<unknown[]>, res: JRPCResponse<unknown>, _next: JRPCEngineNextCallback) => {\n    const result = await provider.request({\n      ...req,\n    });\n    res.result = result;\n  });\n}\n","import { JRPCMiddleware } from \"@toruslabs/openlogin-jrpc\";\n\nimport { IPhantomWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\n\nexport class PhantomInjectedProvider extends BaseInjectedProvider<IPhantomWalletProvider> {\n  protected getProviderHandlers(injectedProvider: IPhantomWalletProvider): IProviderHandlers {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  protected getInjectedProviderProxy(injectedProvider: IPhantomWalletProvider): JRPCMiddleware<unknown, unknown> {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n}\n","import { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSlopeHandlers } from \"./providerHandlers\";\n\nexport class SlopeInjectedProxyProvider extends BaseInjectedProvider<ISlopeProvider> {\n  protected getProviderHandlers(injectedProvider: ISlopeProvider): IProviderHandlers {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, PublicKey, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ISlopeProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getSlopeHandlers = (injectedProvider: ISlopeProvider, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const { data } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      return txMessage;\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({ message: \"Invalid transaction message\" });\n      const { data } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, Buffer.from(signature));\n      const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return { signature: res };\n    },\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const { length } = allTxns;\n\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n      const { msg, data } = await injectedProvider.signAllTransactions(unsignedTx);\n\n      if (!data.publicKey || data.signatures?.length !== length) throw new Error(msg);\n\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, Buffer.from(signature));\n      }\n\n      return allTxns;\n    },\n  };\n  return providerHandlers;\n};\n","import { SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { BaseInjectedProvider } from \"../base/baseInjectedProvider\";\nimport { getSolflareHandlers } from \"./providerHandlers\";\n\nexport class SolflareInjectedProvider extends BaseInjectedProvider<SolflareWallet> {\n  protected getProviderHandlers(injectedProvider: SolflareWallet): IProviderHandlers {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n}\n","import { Connection, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CustomChainConfig, SafeEventEmitterProvider } from \"@web3auth/base\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IBaseWalletProvider, SolflareWallet } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { getBaseProviderHandlers } from \"../base/providerHandlers\";\n\nexport const getSolflareHandlers = (injectedProvider: SolflareWallet, getProviderEngineProxy: () => SafeEventEmitterProvider): IProviderHandlers => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider as IBaseWalletProvider);\n  solflareProviderHandlers.signAndSendTransaction = async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = (await provider.request<CustomChainConfig>({ method: \"solana_provider_config\", params: [] })) as CustomChainConfig;\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return { signature: res };\n  };\n  return solflareProviderHandlers;\n};\n","import { Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { IProviderHandlers } from \"../../../rpc/solanaRpcMiddlewares\";\n\nexport const getTorusHandlers = (injectedProvider: ITorusWalletProvider): IProviderHandlers => {\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request<string[]>({\n        method: \"solana_requestAccounts\",\n        params: {},\n      });\n      return accounts;\n    },\n\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return { signature: response };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    },\n  };\n  return providerHandlers;\n};\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { ITorusWalletProvider } from \"../../../interface\";\nimport { createSolanaMiddleware } from \"../../../rpc/solanaRpcMiddlewares\";\nimport { createInjectedProviderProxyMiddleware } from \"../injectedProviderProxy\";\nimport { getTorusHandlers } from \"./providerHandlers\";\n\nexport class TorusInjectedProvider extends BaseProvider<BaseProviderConfig, BaseProviderState, ITorusWalletProvider> {\n  constructor({ config, state }: { config: BaseProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public async switchChain(_: { chainId: string }): Promise<void> {\n    return Promise.resolve();\n  }\n\n  public async setupProvider(injectedProvider: ITorusWalletProvider): Promise<void> {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this.provider) throw ethErrors.provider.custom({ message: \"Torus solana provider is not initialized\", code: 4902 });\n    const { chainId } = this.config.chainConfig;\n\n    const connectedChainId = await this.provider.request<unknown, string>({\n      method: \"solana_chainId\",\n    });\n\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : `0x${parseInt(connectedChainId, 10).toString(16)}`;\n    if (chainId !== connectedHexChainId)\n      throw WalletInitializationError.rpcConnectionError(`Invalid network, net_version is: ${connectedHexChainId}, expected: ${chainId}`);\n\n    this.update({ chainId: connectedHexChainId });\n    this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  private async setupEngine(injectedProvider: ITorusWalletProvider): Promise<void> {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  private async handleInjectedProviderUpdate(injectedProvider: ITorusWalletProvider): Promise<void> {\n    injectedProvider.on(\"accountsChanged\", async (accounts: string[]) => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async (chainId: string) => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : `0x${parseInt(chainId, 10).toString(16)}`;\n      // Check if chainId changed and trigger event\n      this.configure({\n        chainConfig: { ...this.config.chainConfig, chainId: connectedHexChainId },\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n}\n","import { Keypair, Transaction } from \"@solana/web3.js\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport nacl from \"@toruslabs/tweetnacl-js\";\nimport { SafeEventEmitterProvider, WalletInitializationError } from \"@web3auth/base\";\nimport bs58 from \"bs58\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { IProviderHandlers } from \"../../rpc/solanaRpcMiddlewares\";\n\nexport async function getProviderHandlers({\n  privKey,\n  getProviderEngineProxy,\n}: {\n  privKey: string;\n  getProviderEngineProxy: () => SafeEventEmitterProvider | null;\n}): Promise<IProviderHandlers> {\n  const keyPairGenerator = (): Keypair => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers: IProviderHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n\n    signTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<Transaction> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n\n    signMessage: async (req: JRPCRequest<{ message: Uint8Array }>): Promise<Uint8Array> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n\n    signAndSendTransaction: async (req: JRPCRequest<{ message: Transaction }>): Promise<{ signature: string }> => {\n      if (!req.params?.message) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n      const _providerEngineProxy = getProviderEngineProxy();\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n\n      const sig = await _providerEngineProxy.request<string>({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())],\n      });\n      return { signature: sig };\n    },\n\n    signAllTransactions: async (req: JRPCRequest<{ message: Transaction[] }>): Promise<Transaction[]> => {\n      if (!req.params?.message || !req.params?.message.length) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = req.params?.message;\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n      return txns;\n    },\n  };\n\n  return providerHandlers;\n}\n","import { providerFromEngine } from \"@toruslabs/base-controllers\";\nimport { JRPCEngine, JRPCMiddleware, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { CHAIN_NAMESPACES, CustomChainConfig, WalletInitializationError } from \"@web3auth/base\";\nimport { BaseProvider, BaseProviderConfig, BaseProviderState } from \"@web3auth/base-provider\";\nimport { ethErrors } from \"eth-rpc-errors\";\n\nimport { createJsonRpcClient } from \"../../rpc/JrpcClient\";\nimport {\n  AddSolanaChainParameter,\n  createAccountMiddleware,\n  createChainSwitchMiddleware,\n  createSolanaMiddleware,\n  IAccountHandlers,\n  IChainSwitchHandlers,\n} from \"../../rpc/solanaRpcMiddlewares\";\nimport { getProviderHandlers } from \"./solanaPrivateKeyUtils\";\n\nexport interface SolanaPrivKeyProviderConfig extends BaseProviderConfig {\n  chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n}\nexport interface SolanaPrivKeyProviderState extends BaseProviderState {\n  privateKey?: string;\n}\nexport class SolanaPrivateKeyProvider extends BaseProvider<BaseProviderConfig, SolanaPrivKeyProviderState, string> {\n  constructor({ config, state }: { config: SolanaPrivKeyProviderConfig; state?: BaseProviderState }) {\n    super({ config: { chainConfig: { ...config.chainConfig, chainNamespace: CHAIN_NAMESPACES.SOLANA } }, state });\n  }\n\n  public static getProviderInstance = async (params: {\n    privKey: string;\n    chainConfig: Omit<CustomChainConfig, \"chainNamespace\">;\n  }): Promise<SolanaPrivateKeyProvider> => {\n    const providerFactory = new SolanaPrivateKeyProvider({ config: { chainConfig: params.chainConfig } });\n    await providerFactory.setupProvider(params.privKey);\n    return providerFactory;\n  };\n\n  public async enable(): Promise<string[]> {\n    if (!this.state.privateKey)\n      throw ethErrors.provider.custom({ message: \"Private key is not found in state, plz pass it in constructor state param\", code: 4902 });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request<unknown, string[]>({ method: \"eth_accounts\" });\n  }\n\n  public async setupProvider(privKey: string): Promise<void> {\n    const providerHandlers = await getProviderHandlers({ privKey, getProviderEngineProxy: this.getProviderEngineProxy.bind(this) });\n\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n\n    const engine = new JRPCEngine();\n    const { networkMiddleware } = createJsonRpcClient(this.config.chainConfig as CustomChainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n\n    const provider = providerFromEngine(engine);\n\n    this.updateProviderEngineProxy(provider);\n\n    await this.lookupNetwork();\n  }\n\n  public async updateAccount(params: { privateKey: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const existingKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request<unknown, string[]>({ method: \"requestAccounts\" }),\n      });\n    }\n  }\n\n  public async switchChain(params: { chainId: string }): Promise<void> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\",\n    });\n    this.configure({ chainConfig });\n    const privKey = await this._providerEngineProxy.request<unknown, string>({ method: \"solanaPrivateKey\" });\n    await this.setupProvider(privKey);\n  }\n\n  protected async lookupNetwork(): Promise<string> {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({ message: \"Provider is not initialized\", code: 4902 });\n    const health = await this._providerEngineProxy.request<unknown, string>({\n      method: \"getHealth\",\n      params: [],\n    });\n    const { chainConfig } = this.config;\n    if (health !== \"ok\")\n      throw WalletInitializationError.rpcConnectionError(`Failed to lookup network for following rpc target: ${chainConfig.rpcTarget}`);\n    this.update({ chainId: chainConfig.chainId });\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", { chainId: this.state.chainId });\n    }\n    return this.state.chainId;\n  }\n\n  private getChainSwitchMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const chainSwitchHandlers: IChainSwitchHandlers = {\n      addNewChainConfig: async (req: JRPCRequest<AddSolanaChainParameter>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const { chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency } = req.params;\n\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: nativeCurrency?.symbol || \"SOL\",\n          tickerName: nativeCurrency?.name || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: blockExplorerUrls?.[0] || \"\",\n          decimals: nativeCurrency?.decimals || 9,\n        });\n      },\n      switchSolanaChain: async (req: JRPCRequest<{ chainId: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      },\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  private getAccountMiddleware(): JRPCMiddleware<unknown, unknown> {\n    const accountHandlers: IAccountHandlers = {\n      updatePrivatekey: async (req: JRPCRequest<{ privateKey: string }>): Promise<void> => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const { privateKey } = req.params;\n        await this.updateAccount({ privateKey });\n      },\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n}\n","import { Transaction } from \"@solana/web3.js\";\nimport { RequestArguments, SafeEventEmitterProvider } from \"@web3auth/base\";\n\nimport { ISolanaWallet } from \"./interface\";\n\nexport class SolanaWallet implements ISolanaWallet {\n  public provider: SafeEventEmitterProvider;\n\n  constructor(provider: SafeEventEmitterProvider) {\n    this.provider = provider;\n  }\n\n  public async requestAccounts(): Promise<string[]> {\n    const accounts = await this.provider.request<string[]>({\n      method: \"requestAccounts\",\n      params: {},\n    });\n    return accounts;\n  }\n\n  public async signAndSendTransaction(transaction: Transaction): Promise<{ signature: string }> {\n    const { signature } = await this.provider.request<{ signature: string }>({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction,\n      },\n    });\n    return { signature };\n  }\n\n  public async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const signedTransaction = (await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction,\n      },\n    })) as Transaction;\n    return signedTransaction;\n  }\n\n  public async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const signedTransactions = (await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions,\n      },\n    })) as Transaction[];\n    return signedTransactions;\n  }\n\n  public async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = await this.provider.request<Uint8Array>({\n      method: \"signMessage\",\n      params: {\n        message: data,\n      },\n    });\n    return response as Uint8Array;\n  }\n\n  public async request<T>(args: RequestArguments): Promise<T> {\n    const result = await this.provider.request<T>(args);\n    return result as T;\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n",null,"/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n"],"names":["number","n","Number","isSafeInteger","Error","bytes","b","Uint8Array","TypeError","lengths","length","includes","assert","bool","hash","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","output","out","min","createView","self","crypto","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","Uint32Array","Array","from","v","i","toString","padStart","toBytes","data","str","TextEncoder","encode","utf8ToBytes","Hash","clone","this","_cloneInto","wrapConstructor","hashConstructor","hashC","message","update","digest","tmp","SHA2","constructor","padOffset","isLE","super","pos","view","len","take","Math","set","subarray","process","dataView","roundClean","digestInto","fill","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","res","slice","destroy","to","U32_MASK64","fromBig","le","split","lst","Ah","Al","toBig","shrSH","s","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","u64","map","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","offset","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_224","SHA512_256","SHA384","sha512","_0n","_1n","_2n","CU_O","CURVE","Object","freeze","a","d","P","Gx","Gy","POW_2_256","SQRT_M1","SQRT_AD_MINUS_ONE","INVSQRT_A_MINUS_D","ONE_MINUS_D_SQ","D_MINUS_ONE_SQ","ExtendedPoint","x","y","z","t","static","p","Point","equals","ZERO","mod","points","toInv","nums","inverted","invert","reduce","acc","num","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","other","assertExtPoint","X1","Y1","Z1","X2","Y2","Z2","X1Z2","X2Z1","Y1Z2","Y2Z1","negate","double","A","B","C","D","x1y1","E","G","F","H","X3","Y3","T3","Z3","T1","T2","subtract","precomputeWindow","W","windows","base","window","push","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","f","windowSize","mask","maxNumber","shiftBy","wbits","pr","cached","abs","multiply","scalar","normalizeScalar","multiplyUnsafe","P0","isSmallOrder","isTorsionFree","invZ","ax","ay","fromRistrettoBytes","legacyRist","toRistrettoBytes","fromRistrettoHash","assertRstPoint","RistrettoPoint","ep","r0","r","Ns","c","isValid","Ns_D_is_sq","uvRatio","s_","edIsNegative","Nt","s2","W0","W1","W2","W3","hex","r1","bytes255ToNumberLE","ensureBytes","R1","calcElligatorRistrettoMap","r2","R2","emsg","b1","b2","equalBytes","numberTo32BytesLE","u1","u2","u1_2","u2_2","I","invertSqrt","Dx","Dy","toRawBytes","u2sq","invsqrt","D1","D2","zInv","_x","_y","toHex","bytesToHex","one","two","WeakMap","_setWindowSize","delete","strict","normed","bytesToNumberLE","y2","u","isXOdd","privateKey","getExtendedPublicKey","point","toX25519","Signature","assertValidity","fromHex","u8","concatBytes","arrays","every","result","pad","hexes","uint8a","hexToBytes","array","j","hexByte","byte","parseInt","isNaN","numberTo32BytesBE","reverse","MAX_255B","modulo","q","m","gcd","pow2","power","pow_2_252_3","_5n","_10n","_20n","_40n","_80n","b4","b5","b10","b20","b40","b80","b160","b240","b250","pow_p_5_8","v3","v7","vx2","root1","root2","useRoot1","useRoot2","noRoot","modlLE","expectedLength","max","adjustBytes25519","checkPrivateKey","key","getKeyFromHash","hashed","head","prefix","pointBytes","_sha512Sync","sha512s","async","utils","getExtendedPublicKeySync","prepareVerification","sig","publicKey","SB","pub","msg","finishVerification","k","kA","sync","getPublicKey","sign","R","verify","node","nodeCrypto","web","undefined","TORSION_SUBGROUP","hashToPrivateScalar","randomBytes","bytesLength","getRandomValues","randomPrivateKey","subtle","createHash","precompute","sha512Sync","defineProperties","configurable","val","Maj","SHA256_K","IV","SHA256_W","SHA256","W15","s0","s1","SHA224","sha256","StructError","failure","failures","rest","path","join","assign","name","isObject","print","JSON","stringify","shiftIterator","input","done","next","toFailure","context","struct","branch","type","refinement","toFailures","Symbol","iterator","run","options","coerce","ctx","coercer","schema","isArray","valid","validator","entries","ts","Map","Set","refiner","Struct","props","validate","is","tuples","tuple","define","Element","boolean","Class","literal","constant","description","never","nullable","optional","record","Key","Value","string","Elements","Never","keys","union","Structs","S","first","unknown","condition","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_7n","_256n","_0x71n","round","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","Keccak","suffix","enableXOF","rounds","posOut","state32","floor","keccak","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","finish","writeInto","bufferOut","xofInto","xof","gen","keccak_256","genShake","hashCons","opts","wrapConstructorWithOpts","dkLen","HMAC","_key","iHash","oHash","buf","getPrototypeOf","hmac","_3n","_8n","beta","divNearest","endo","splitScalar","a1","a2","POW_2_128","c1","c2","k1","k2","k1neg","k2neg","fieldLen","groupLen","weierstrass","x2","x3","USE_ENDOMORPHISM","ShaError","assertJacPoint","JacobianPoint","scratch","Z1Z1","Z2Z2","U1","U2","S1","S2","x1b","HH","HHH","V","k1p","k2p","offset1","offset2","cond1","cond2","constTimeNegate","fake","f1p","f2p","is0","iz1","iz2","iz3","zz","item","neg","hasEvenY","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","sqrtMod","isYOdd","header","fromCompressedHex","fromUncompressedHex","normalizePrivateKey","msgHash","signature","recovery","normalizeSignature","truncateHash","radj","rinv","numTo32bStr","Q","multiplyAndAddUnsafe","isCompressed","toHexX","toRawX","left","aP","bQ","sum","sliceDER","parseDERInt","hexToNumber","sBytes","rBytesLeft","parseDERSignature","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","numTo32b","bits2int_2","delta","truncateOnly","_sha256Sync","_hmacSha256Sync","HmacDrbg","hashLen","qByteLen","counter","values","hmacSha256","hmacSync","checkSync","incr","seed","reseedSync","sl","generateSync","kmdToSig","kBytes","lowS","kinv","error","fromCompact","bits2int","bits2octets","z1","z2","int2octets","initSigArgs","extraEntropy","h1","seedArgs","e","finalizeSig","recSig","der","recovered","canonical","TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","messages","forEach","ckey","importKey","createHmac","sha256Sync","hmacSha256Sync","taggedHash","tag","tagP","tagH","charCodeAt","taggedHashSync","_JacobianPoint","ed25519","generateKeypair","privateScalar","secretKey","isOnCurve","toBuffer","Buffer","properties","serialize","SOLANA_SCHEMA","deserialize","deserializeUnchecked","PUBLIC_KEY_LENGTH","uniquePublicKeyCounter","toStringTag","PublicKey","_bn","isPublicKeyData","decoded","bs58","BN","eq","toBase58","toJSON","toArrayLike","zeroPad","copy","_Symbol$toStringTag","fromPublicKey","programId","publicKeyBytes","seeds","createProgramAddressSync","address","nonce","seedsWithNonce","concat","err","findProgramAddressSync","pubkeyData","default","kind","fields","PACKET_DATA_SIZE","TransactionExpiredBlockheightExceededError","defineProperty","prototype","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","index","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","instruction","programIdIndex","accountKeyIndexes","meta","pubkey","property","BufferLayout","rustString","rsl","_decode","decode","bind","_encode","rslShim","chars","alloc","span","getAlloc","getItemAlloc","field","elementLayout","layout","decodeLength","size","elem","encodeLength","rem_len","CompiledKeys","payer","keyMetaMap","getOrInsertDefault","keyMeta","isSigner","isWritable","isInvoked","payerKeyMeta","ix","accountMeta","getMessageComponents","mapEntries","writableSigners","filter","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","findIndex","entry","Message","args","accountKeys","recentBlockhash","indexToProgramIds","account","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","compile","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","isProgramId","has","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","signDataLayout","Layout","transaction","signData","byteArray","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","count","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","tableLookup","tableAccount","find","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","maskedPrefix","splice","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","hasOwnProperty","call","minContextSlot","blockhash","nonceInstruction","signers","items","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","localeCompare","feePayerIndex","payerMeta","unshift","signedKeys","unsignedKeys","indexOf","invariant","_compile","pair","serializeMessage","connection","getFeeForMessage","setSigners","seen","uniqueSigners","signer","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","_verifySignatures","config","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","some","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","sendTransaction","status","confirmTransaction","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","blob","encodeDecode","bigIntLayout","src","toBigIntLE","bigInt","toBufferLE","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","UpgradeNonceAccount","SystemProgram","params","lamports","space","fromPubkey","newAccountPubkey","basePubkey","toPubkey","accountPubkey","createAccountWithSeed","noncePubkey","createAccount","initParams","nonceInitialize","authorized","instructionData","newAuthorizedPubkey","Loader","ceil","chunkSize","program","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","allocate","owner","transfer","dataLayout","transactions","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","all","objToString","objKeys","obj","isArrayProp","propVal","toStr","isFinite","returnVal","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","slot","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","pow","getLastSlotInEpoch","SendTransactionError","logs","SolanaJSONRPCError","customMessage","code","globalThis","fetch","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","typeIndex","decodeData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","versionedMessageFromResponse","response","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","commission","GetInflationRateResult","total","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","source","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","COMMON_HTTP_HEADERS","Connection","endpoint","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","httpAgent","client","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","confirmTransactionInitialTimeout","putativeUrl","test","assertEndpointUrl","matches","match","hostish","portWithColon","protocol","startsWith","startPort","makeWebsocketUrl","url","customFetch","fetchImpl","fetchWithMiddleware","info","init","modifiedFetchArgs","reject","modifiedInfo","modifiedInit","RpcClient","request","callback","method","body","agent","headers","too_many_requests_retries","waitTime","log","statusText","text","ok","createRpcClient","requests","batch","methodName","createRpcBatchRequest","RpcWebSocketClient","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","_buildArgs","getBalanceAndContext","then","catch","configArg","tokenMintAddress","tokenAddress","ownerAddress","_args","arg","mintAddress","getAccountInfoAndContext","publicKeys","rawConfig","getMultipleAccountsInfoAndContext","configOrCommitment","encoding","configWithoutEncoding","strategy","rawSignature","decodedSignature","aborted","reason","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","signal","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","abortConfirmation","removeSignatureListener","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","expiryPromise","checkBlockHeight","getBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","_signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","clearTimeout","startSlot","limit","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","unsafeRes","transactionDetails","extra","block","endSlot","firstAvailableBlock","getFirstAvailableBlock","getConfirmedBlockSignatures","until","highestConfirmedRoot","getSlot","before","getConfirmedSignaturesForAddress2","accountInfo","fromAccountData","disableCache","expired","Date","now","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getLatestBlockhash","MS_PER_SLOT","transactionOrMessage","configOrSigners","includeAccounts","encodedTransaction","originalTx","_blockhashWithExpiryBlockHeight","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","notify","_updateSubscriptions","MAX_SAFE_INTEGER","clearInterval","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","_this$_subscriptionSt","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","fastStableStringify","existingSubscription","onAccountChange","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","onLogs","mentions","onSlotChange","onSlotUpdate","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","Keypair","keypair","_keypair","skipValidation","computedPublicKey","ii","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableProgram","lookupTableAddress","bumpSeed","recentSlot","addr","recipient","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","ComputeBudgetProgram","microLamports","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","PRIVATE_KEY_BYTES","fromSecretKey","createInstructionWithPublicKey","secp256k1","msgs","ecdsaSign","privKey","drbg","publicKeyCreate","fromPrivateKey","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","recoveryId","createInstructionWithEthAddress","ethAddress","publicKeyToEthAddress","rawAddress","substr","ETHEREUM_ADDRESS_BYTES","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Lockup","unixTimestamp","custodian","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","StakeProgram","stakePubkey","lockup","maybeLockup","staker","withdrawer","initialize","stakeAuthorizationType","custodianPubkey","newAuthorized","authorityBase","authoritySeed","authorityOwner","splitStakePubkey","splitInstruction","sourceStakePubKey","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","VoteProgram","voteInit","authorizedVoter","authorizedWithdrawer","initializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyBasePubkey","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","voteAuthorizeWithSeedArgs","authorizedWithdrawerPubkey","currentVoteAccountBalance","rentExemptMinimum","withdraw","website","details","keybaseUsername","createChainIdMiddleware","chainId","req","end","createProviderConfigMiddleware","providerConfig","createConfigMiddleware","mergeMiddleware","createJsonRpcClient","rpcTarget","createFetchMiddleware","networkMiddleware","createGetAccountsMiddleware","_ref","getAccounts","createAsyncMiddleware","_context","createRequestAccountsMiddleware","_ref3","requestAccounts","_context2","createGenericJRPCMiddleware","targetMethod","handler","_context3","createSolanaMiddleware","providerHandlers","signTransaction","signAndSendTransaction","signAllTransactions","signMessage","getPrivateKey","getSecretKey","BaseInjectedProvider","_inherits","_classCallCheck","_super","chainConfig","chainNamespace","CHAIN_NAMESPACES","_createClass","injectedProvider","engine","JRPCEngine","getProviderHandlers","solanaMiddleware","configMiddleware","injectedProviderProxy","getInjectedProviderProxy","provider","providerFromEngine","updateProviderEngineProxy","lookupNetwork","_lookupNetwork","BaseProvider","getBaseProviderHandlers","_requestAccounts","_getAccounts","_getPrivateKey","ethErrors","_getSecretKey","_context5","_context6","display","sigData","_req$params","_req$params2","_context7","_context8","txRes","createInjectedProviderProxyMiddleware","_next","PhantomInjectedProvider","SlopeInjectedProxyProvider","getProviderEngineProxy","_yield$injectedProvid","_yield$injectedProvid2","txMessage","_yield$injectedProvid3","_yield$injectedProvid4","conn","allTxns","unsignedTx","_yield$injectedProvid5","_data$signatures","getSlopeHandlers","SolflareInjectedProvider","solflareProviderHandlers","getSolflareHandlers","getTorusHandlers","_req$params3","_req$params4","_req$params5","TorusInjectedProvider","handleInjectedProviderUpdate","setupEngine","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","emit","_context4","_this","configure","_objectSpread","setupProvider","_getProviderHandlers","keyPairGenerator","_context9","keyPair","signedMsg","nacl","_providerEngineProxy","txns","_req$params6","_iterator","tx","SolanaPrivateKeyProvider","_enable","_createJsonRpcClient","getChainSwitchMiddleware","getAccountMiddleware","getChainConfig","health","chainSwitchHandlers","addNewChainConfig","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","addChain","ticker","symbol","tickerName","displayName","blockExplorer","switchSolanaChain","switchChain","_ref6","createChainSwitchMiddleware","accountHandlers","updatePrivatekey","_this2","updateAccount","_ref7","createAccountMiddleware","providerFactory","SolanaWallet","_defineProperty","_yield$this$provider$","signedTransaction","signedTransactions","_Buffer","require","module","exports","ALPHABET","BASE_MAP","charAt","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","allocUnsafe","isBuffer","pbegin","pend","b58","it1","it2","repeat","basex","checkUint8Array","uint8ArrayToBuffer","buffer_1","isInteger","makeDestinationObject","getSpan","RangeError","replicate","rv","fromArray","nameWithProperty","lo","ExternalLayout","isCount","GreedyCount","elementSpan","rem","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","V2E32","divmodInt64","hi32","lo32","roundedInt64","NearUInt64","readUInt32LE","writeUInt32LE","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","idx","elo","Structure","decodePrefixes","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","discriminator","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","dlo","clo","contentOffset","addVariant","variant","VariantLayout","vb","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","addField","bits","bf","BitField","addBoolean","Boolean","fieldFor","container","totalBits","usedBits","valueMask","start","wordMask","wordValue","Blob","srcBuffer","write","CString","String","srcb","UTF8","maxSpan","Constant","base64","ieee754","customInspectSymbol","K_MAX_LENGTH","createBuffer","setPrototypeOf","encodingOrOffset","isEncoding","actual","fromString","ArrayBuffer","isView","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","arguments","loweredCase","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","base64Write","ucs2Write","units","hi","utf16leToBytes","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","enumerable","poolSize","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","toLocaleString","inspect","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","mul","readUintBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUint32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","last","boundsError","readBigUInt64BE","readInt8","readInt16LE","readInt16BE","readBigInt64LE","readBigInt64BE","writeUintLE","writeUintBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUint32BE","writeBigUInt64LE","writeBigUInt64BE","sub","writeInt8","writeInt16LE","writeInt16BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","errors","sym","getMessage","Base","stack","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","leadSurrogate","toByteArray","base64clean","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","reversed","width","inherits","ctor","superCtor","super_","TempCtor","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","lowerBound","parseBase","move","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","w","off","_strip","limbLen","limbPow","imuln","_iaddn","_move","_expand","_normSign","for","zeros","groupSizes","groupBases","groupSize","groupBase","isZero","modrn","idivn","toNumber","smallMulTo","ncarry","rword","maxJ","ArrayType","reqLength","_toArrayLikeLE","position","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","o","a0","al0","ah0","al1","ah1","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","bl1","bh1","bl2","bh2","bl3","bh3","bl4","bh4","bl5","bh5","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","mulp","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","andln","modn","egcd","g","isEven","yp","xp","im","isOdd","jm","_invmp","x1","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","minv","ireduce","rlen","imulK","strip","prev","mod3","nOne","lpow","inv","wnd","currentLen","mont","__createBinding","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","__esModule","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","addToFieldPath","fieldName","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","serializeStruct","borshSerialize","structSchema","deserializeField","reader","deserializeStruct","classType","borshDeserialize","Writer","Reader","SlowBuffer","INSPECT_MAX_BYTES","kMaxLength","Events","EE","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","removeListener","removeAllListeners","prefixed","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","LN2","uuid","generateRequest","ClientBrowser","callServer","reviver","replacer","generator","notificationIdNull","isBatch","hasCallback","_parseResponse","responseText","parse","isError","isNotError","_interopRequireDefault","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","_isNativeReflectConstruct","Super","NewTarget","Client","_CommonClient","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","propertyIsEnumerable","CommonClient","_EventEmitter","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","socket","timeout","ws_opts","send","promise","_login","mark","_callee","resp","wrap","sent","abrupt","stop","_listMethods","_callee2","_this3","_subscribe","_callee3","_x2","_unsubscribe","_callee4","_x3","_this4","_ref2","WebSocketBrowserImpl","protocols","WebSocket","onopen","onmessage","onerror","onclose","optionsOrCallback","copyProps","SafeBuffer","rnds8","rng","msCrypto","REGEX","byteToHex","rnds","random","ReferenceError","asyncGeneratorStep","_throw","Constructor","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","_getPrototypeOf","subClass","superClass","_typeof","assertThisInitialized","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","awrap","iter","object","pop","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","delegateYield","_setPrototypeOf","prim","runtime","regeneratorRuntime","accidentalStrictMode","Function","inRange","ToDictionary","Stream","tokens","endOfStream","prepend","token","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","_ignoreBOM","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","stream","bite","code_point","UTF8Encoder","temp","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints"],"sourceRoot":""}